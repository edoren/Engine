apply plugin: "com.android.application"

def supportedArchitectures = ["armeabi-v7a", "arm64-v8a", "x86", "x86_64"]

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "@APP_PACKAGE@"
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters = supportedArchitectures
        }
        externalNativeBuild {
            cmake {
                // targets "@APP_NAME@",
                arguments = [
                    @CMAKE_ARGUMENTS@,
                    "--no-warn-unused-cli"
                ]
            }
        }
    }

    buildTypes {
        debug {
            debuggable = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    externalNativeBuild {
        cmake {
            path "@APP_ROOT_DIRECTORY@/CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            manifest.srcFile "@APP_BUILD_DIRECTORY@/AndroidManifest.xml"
            java.srcDirs = ["@APP_BUILD_DIRECTORY@/src"]
            res.srcDirs = ["@APP_BUILD_DIRECTORY@/res"]
            assets.srcDirs = ["@APP_BUILD_DIRECTORY@/assets"]
            jniLibs.srcDirs = ["@APP_BUILD_DIRECTORY@/jniLibs"]
        }
    }
}

tasks.register("runProcessAssets", Exec) {
    commandLine "@PYTHON_EXECUTABLE@",
                "@APP_ROOT_DIRECTORY@/scripts/process_data.py",
                "@APP_ROOT_DIRECTORY@/data", "@APP_BUILD_DIRECTORY@/assets"
}

tasks.register("copyRelease", Copy) {
    from("build/outputs/apk/release")
    into("../bin")
    include("app-release-unsigned.apk")
    rename("app-release-unsigned.apk", "@APP_NAME@-Release.apk")
}

tasks.register("copyDebug", Copy) {
    from("build/outputs/apk/debug")
    into("../bin")
    include("app-debug.apk")
    rename("app-debug.apk", "@APP_NAME@-Debug.apk")
}

project.afterEvaluate {
    tasks.getByPath("assembleRelease").finalizedBy tasks.getByPath("copyRelease")
    tasks.getByPath("assembleDebug").finalizedBy tasks.getByPath("copyDebug")
    tasks.getByPath("externalNativeBuildRelease").finalizedBy tasks.getByPath("runProcessAssets")
    tasks.getByPath("externalNativeBuildDebug").finalizedBy tasks.getByPath("runProcessAssets")
}

dependencies {
    implementation fileTree(dir: "@APP_BUILD_DIRECTORY@/libs", include: ["*.jar"])
    implementation fileTree(dir: "@APP_ROOT_DIRECTORY@/third_party/prebuilt/android/libs/Release", include: ["*.jar", "*.aar"])
    implementation "com.android.support.constraint:constraint-layout:1.0.2"
}
