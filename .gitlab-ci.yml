variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  # Temporal fix for SSL certificate error in GitLab CI see
  # https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2148
  GIT_SSL_NO_VERIFY: "true"

.linux_config: &linux_image
  image: ubuntu:16.04
  tags:
    - docker
  before_script:
    # System configuration
    - apt-get update -qq
    - apt-get install -qq curl software-properties-common  # install add-apt-repository
    - add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - apt-get update -qq
    # Engine dependencies
    - apt-get install -qq build-essential clang gcc-6 g++-6 cmake libsdl2-dev libglew-dev
    # SDL2 dependencies
    - apt-get install -qq libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev
    # Install the VulkanSDK
    - curl -fsS -o VulkanSDK.run https://vulkan.lunarg.com/sdk/download/$VULKAN_SDK_VERSION/linux/vulkansdk-linux-x86_64-$VULKAN_SDK_VERSION.run?human=true
    - chmod +x VulkanSDK.run
    - ./VulkanSDK.run --quiet
    - export VULKAN_SDK=$PWD/VulkanSDK/$VULKAN_SDK_VERSION/x86_64
    - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$VULKAN_SDK/lib"
    - export VK_LAYER_PATH="$VULKAN_SDK/etc/explicit_layer.d"
    - export PATH="$PATH:$VULKAN_SDK/bin"

.android_config: &android_image
  image: lakoo/android-ndk:25-26.0.2-r15c
  tags:
    - docker
  before_script:
    # System configuration
    - apt-get update -qq
    - apt-get install -qq cmake build-essential gcc g++ python3
    # Install glslang
    - git clone https://github.com/KhronosGroup/glslang.git --depth 1
    - mkdir -p glslang/build
    - cd glslang/build
    - cmake .. -DCMAKE_BUILD_TYPE=Release
    - cmake --build . --config Release --target install
    - cd -

stages:
  - build
  - test

build:linux_gcc:
  <<: *linux_image
  stage: build
  except:
    - gh-pages
    - tmp
  script:
    - export CC=gcc-6
    - export CXX=g++-6
    - ./generate.py --name Engine --platform linux --package me.edoren.engine --build-type Release
    - cd build/linux
    - ./build.py
  artifacts:
    expire_in: 1 day
    paths:
      - build/linux/

build:linux_clang:
  <<: *linux_image
  stage: build
  except:
    - gh-pages
    - tmp
  script:
    - export CC=clang
    - export CXX=clang++
    - ./generate.py --name Engine --platform linux --package me.edoren.engine --build-type Release
    - cd build/linux
    - ./build.py
  artifacts:
    expire_in: 1 day
    paths:
      - build/linux/

build:android:
  <<: *android_image
  stage: build
  except:
    - gh-pages
    - tmp
  script:
    - ./generate.py --name Engine --platform android --package me.edoren.engine --build-type Release
    - cd build/android
    - ./build.py
  artifacts:
    expire_in: 1 day
    paths:
      - build/android/

test:linux_gcc:
  <<: *linux_image
  stage: test
  except:
    - gh-pages
    - tmp
  script:
    - cd build/linux/tests/
    - ctest -V
  dependencies:
    - build:linux_gcc

test:linux_clang:
  <<: *linux_image
  stage: test
  except:
    - gh-pages
    - tmp
  script:
    - cd build/linux/tests/
    - ctest -V
  dependencies:
    - build:linux_clang
