variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  # Temporal fix for SSL certificate error in GitLab CI see
  # https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2148
  GIT_SSL_NO_VERIFY: "true"

.linux_config: &linux_image
  image: ubuntu:16.04
  tags:
    - docker
  before_script:
    - echo Vulkan Version $VULKAN_SDK_VERSION
    # System configuration
    - apt-get update -qq
    - apt-get install -qq curl software-properties-common  # install add-apt-repository
    - add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - apt-get update -qq
    # Engine dependencies
    - apt-get install -qq build-essential clang gcc-6 g++-6 cmake libsdl2-dev libglew-dev
    # Install the VulkanSDK
    - curl -fsS -o VulkanSDK.run https://vulkan.lunarg.com/sdk/download/$VULKAN_SDK_VERSION/linux/vulkansdk-linux-x86_64-$VULKAN_SDK_VERSION.run?human=true
    - chmod +x VulkanSDK.run
    - ./VulkanSDK.run --quiet
    - export VULKAN_SDK=$PWD/VulkanSDK/$VULKAN_SDK_VERSION/x86_64
    - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$VULKAN_SDK/lib"
    - export VK_LAYER_PATH="$VULKAN_SDK/etc/explicit_layer.d"
    - export PATH="$PATH:$VULKAN_SDK/bin"
    - cd ../..

stages:
  - build
  - test

build:linux_gcc:
  <<: *linux_image
  stage: build
  script:
    - export CC=gcc-6
    - export CXX=g++-6
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DENGINE_BUILD_STATIC=OFF
    - make
  artifacts:
    paths:
      - build/

build:linux_clang:
  <<: *linux_image
  stage: build
  script:
    - export CC=clang
    - export CXX=clang++
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DENGINE_BUILD_STATIC=OFF
    - make
  artifacts:
    paths:
      - build/

test:linux_gcc:
  <<: *linux_image
  stage: test
  script:
    - cd build/tests/
    - ctest -V
  dependencies:
    - build:linux_gcc

test:linux_clang:
  <<: *linux_image
  stage: test
  script:
    - cd build/tests/
    - ctest -V
  dependencies:
    - build:linux_clang
